include includes/mixins

doctype html
html(lang="en")
  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge')
    title Kefir.js â€” fast and light Reactive Programming library for JavaScript inspired by Bacon.js and RxJS
    meta(name='viewport', content='width=device-width, initial-scale=1')
    style(type='text/css')
      include:uglify-css includes/stylesheet.css

    script(src='bower-packages/jquery/jquery.js')
    script(src='bower-packages/transducers-js/transducers.js')
    script(src='dist/kefir.js')

    link(rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.6/styles/tomorrow.min.css")
    link(rel="stylesheet" href="https://fonts.googleapis.com/css?family=Fira+Mono|Fira+Sans:400,400italic,500")
    style(type='text/css').
      .hljs {
        background: transparent;
        padding: 2px 2px 2px 12px;
      }
    script(src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.6/highlight.min.js")


  body

    .sidebar
      include includes/side-menu

    .container
      include descriptions/intro
      include descriptions/examples
      include descriptions/about-observables
      include descriptions/create
      include descriptions/convert
      include descriptions/main-methods
      include descriptions/one-source
      include descriptions/multiple-sources
      include descriptions/two-sources
      include descriptions/active-state
      include descriptions/emitter-object
      include descriptions/errors
      include descriptions/current-in-streams

    script.
      $.getJSON('https://api.github.com/emojis', function(emojis){
        $('[data-emoji]').each(function(){
          var name = $(this).data('emoji');
          $(this).attr({
            src: emojis[name],
            title: ':' + name + ':',
            alt: ':' + name + ':'
          });
        });
      });

      var $window = $(window);
      var $document = $(document);

      function getScrollLeft() {
        return $window.scrollLeft();
      }

      function getWinWidth() {
        return $window.width();
      }

      function getDocWidth() {
        return $document.width();
      }

      var scrolls = Kefir.fromEvents($window, 'scroll');
      var resizes = Kefir.fromEvents($window, 'resize');

      var scrollLeft = scrolls.map(getScrollLeft).toProperty(getScrollLeft).skipDuplicates();
      var winWidth = resizes.map(getWinWidth).toProperty(getWinWidth).skipDuplicates();
      var docWidth = resizes.map(getDocWidth).toProperty(getDocWidth).skipDuplicates();

      Kefir.combine([scrollLeft, winWidth, docWidth], function(scrollLeft, winWidth, docWidth) {
        return -Math.min(docWidth - winWidth, Math.max(0, scrollLeft));
      }).skipDuplicates().onValue(function(x) {$('.sidebar').css('left', x)});

      $('pre.javascript').each(function(_, block) {
        hljs.highlightBlock(block);
      });

    | <!-- Yandex.Metrika counter --><script type="text/javascript">(function (d, w, c) { (w[c] = w[c] || []).push(function() { try { w.yaCounter26158662 = new Ya.Metrika({id:26158662}); } catch(e) { } }); var n = d.getElementsByTagName("script")[0], s = d.createElement("script"), f = function () { n.parentNode.insertBefore(s, n); }; s.type = "text/javascript"; s.async = true; s.src = (d.location.protocol == "https:" ? "https:" : "http:") + "//mc.yandex.ru/metrika/watch.js"; if (w.opera == "[object Opera]") { d.addEventListener("DOMContentLoaded", f, false); } else { f(); } })(document, window, "yandex_metrika_callbacks");</script><noscript><div><img src="//mc.yandex.ru/watch/26158662" style="position:absolute; left:-9999px;" alt="" /></div></noscript><!-- /Yandex.Metrika counter -->
